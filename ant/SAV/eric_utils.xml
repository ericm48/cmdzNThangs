<?xml version="1.0" encoding="UTF-8"?>


<project 	name="Eric's ANT Utils" 
		default="init" 
		basedir="." 
		xmlns:ac="antlib:net.sf.antcontrib">

   <description> Eric's Java Utilities </description>

    
	<property file="./build.properties" 											/>
	<!--
	<property file="./test.properties" 											/>
	-->
	<property environment="env"													/>

	<property name="build.dir" 						value="${build.directory}" 		/>   	
	<property name="files.key"						value="${target.files}" 			/>   	
  	
    
	<property name="build.lib.dir" 					value="${build.directory}/lib" 	/>
  	<property name="build.source.dir" 					value="${build.dir}/src" 		/>
  	<property name="build.doc.dir" 					value="${build.dir}/doc" 		/>

  	<property name="projects.dir" 					value="${base.dir}/projects" 		/>


  	<property name="source.dir" 						value="${base.dir}/src"			/> 
  	<property name="source.lib.dir" 					value="${base.dir}/lib"			/> 
  	
  	<property name="release.dir" 						value="${build.dir}/release" 		/>
  	<property name="output.dir" 						value="${build.dir}/bin" 		/>


	<property name="filter.value.CC" 					value="CC"/>
	<property name="filter.value.was7" 				value="was7.dataSource"/>		

	<!--	
	<taskdef resource="net/sf/antcontrib/antcontrib.properties"/>				
	-->
	
	<!--  For future reference -->
	
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
	  <classpath>
	    <pathelement location="/dev/eric/ant/ant-contrib-0.3.jar"/>
	  </classpath>
	</taskdef>								
	
	<!--	
			Default Classpath
	-->

	<path id="default.class.path">
		<pathelement location="${websphere.home}/lib/j2ee.jar" 					/>		
		<!-- <pathelement location="${websphere.home}/plugins/com.ibm.ws.runtime_6.1.0.jar" 	/>	-->
	</path>
		


	<!--
			Target: INIT
	-->     
		

	<target name="init"
   	 	description="Initializes Build Script, Creates Needed Directories">

		    
      	<echo message="Entered: init"/>
      	<!-- Create the time stamp -->
      	<tstamp/>
      
		<echo> 										</echo>		
		<echo>        Project Name: ${ant.project.name}		</echo>
		<echo> 										</echo>
		<echo> 										</echo>
		<echo>      Base Directory: ${basedir} 				</echo>
		<echo> 										</echo>						
		<echo>            base.dir: ${base.dir} 			</echo>		
		<echo>  Projects Directory: ${projects.dir} 			</echo>		
		<echo>     Build Directory: ${build.dir} 			</echo>
		<echo>    Source Directory: ${source.dir}			</echo>
		<echo>       Lib Directory: ${source.lib.dir}		</echo>		
		<echo> 										</echo>
		<echo>      Java Directory: ${env.JAVA_HOME}			</echo>				
		<echo>        M2 Directory: ${env.M2_HOME}			</echo>						
		<echo>       Ant Directory: ${env.ANT_HOME}			</echo>								
		<echo> WebSphere Directory: ${env.WEBSPHERE_HOME}		</echo>		
		<echo> 										</echo>		
		<echo> 										</echo>		
		<echo> 										</echo>		
				
		<!--
		<echo>  Projects Directory: ${build.projects.dir} 	</echo>
		<echo> Build Lib Directory: ${build.lib.dir} 		</echo>		
		-->
 
		<!-- Make sure we have a place to build the code -->

		<!--

	    		<mkdir dir="${build.dir}"		/>     	
	    		<mkdir dir="${build.source.dir}"	/>        	    	
	    		<mkdir dir="${build.lib.dir}"		/>       
	    		<mkdir dir="${build.doc.dir}" 	/>
	    	
	    		<mkdir dir="${output.dir}"		/>    	
	      	<mkdir dir="${release.dir}"		/>    
    		-->
    
    
	</target>


  	<!--
			Target: copy.dirz
  	-->
  	<target name="copy.dirz" description="Sync's 2 directories (and children) from target from source" depends="init" >

		<echo>										</echo>
		<echo>Entering copy.dirz							</echo>
		<echo>										</echo>

		<property name="copy.source.dir" 					value="C:\temp\d2\dirSource" />
		<property name="copy.target.dir" 					value="C:\temp\d2\dirTarget" />		

		<echo>										</echo>
		<echo>  SourceDir:	${copy.source.dir}				</echo>				
		<echo>  TargetDir:	${copy.target.dir}				</echo>				
		<echo>										</echo>
		<echo>										</echo>
		<echo>										</echo>
		<echo>  Reading Source Directory.......				</echo>		
		<echo>										</echo>		
				

	   	<patternset id="copy.patterns">	
		   <include name="**/*.*"						/>  	   	
		   <exclude name="**/*.bak"						/>
	    	</patternset>

	    	<copy todir="${copy.target.dir}" preservelastmodified="true" >
		      	<fileset dir="${copy.source.dir}">
		        		<patternset refid="copy.patterns"/>
		      	</fileset>
	    	</copy>            


	</target>

  	<!--
			Target: copy.file
  	-->
  	<target name="copy.file" description="Copies SINGLE-FILE only if newer, or does not previously exist." depends="init" >

		<echo>										</echo>
		<echo>Entering copy.file							</echo>
		<echo>										</echo>
		<property name="copy.source.file" 					value="C:\temp\d2\dirSource" />
		<property name="copy.target.file" 					value="C:\temp\d2\dirTarget" />		
		<echo>										</echo>
		<echo>  CurrentDir: ${base.dir}					</echo>
		<echo>										</echo>				
		<echo>  SourceFile:	${copy.source.file}				</echo>				
		<echo>  TargetFile:	${copy.target.file}				</echo>				
		<echo>										</echo>
		<echo>										</echo>
		<echo>										</echo>
		<echo>  Reading Source File..........				</echo>		
		<echo>										</echo>		

		<!--		
		<copy file="${base.dir}\${copy.source.file}" tofile="${base.dir}\${copy.target.file}"  verbose="true" />		
		-->
		<copy file="${copy.source.file}" tofile="${copy.target.file}"  verbose="true" />		


	</target>


  	<!--
			Target: copy.filez
  	-->
  	<target name="copy.filez" description="Copies A FILE-SET only if newer, or does not previously exist." depends="init" >

		<echo>										</echo>
		<echo>Entering copy.filez						</echo>
		<echo>										</echo>
		<property name="copy.source.directory" 				value="C:\temp\d2\dirSource" />
		<property name="copy.target.directory" 				value="C:\temp\d2\dirTarget" />	
		<property name="copy.file.mask" 					value="C:\temp\d2\*zoobie.txt" />				
		<echo>										</echo>
		<echo>     CurrentDir: ${base.dir}				    </echo>
		<echo>										</echo>				
		<echo>  SourceDirectory:	${copy.source.directory}		</echo>				
		<echo>  TargetDirectory:	${copy.target.directory}		</echo>				
		<echo>         FileMask:	${copy.file.mask}	      	</echo>						
		<echo>										</echo>
		<echo>										</echo>
		<echo>										</echo>
		<echo>  Reading Source FileSet..........		     </echo>		
		<echo>										</echo>		

		<!--
		<copy file="${copy.source.fileset}" tofile="${copy.target.fileset}"  verbose="true" />		
		-->

		<copy todir="${copy.target.directory}" preservelastmodified="true" verbose="true">
    			<fileset dir="${copy.source.directory}">
      			<include name="${copy.file.mask}"/>
    			</fileset>
  		</copy>


	</target>



  	<!--
			Target: try.this2
  	-->
  	<target name="try.this2" description="Test Target in Ant" depends="init">

		<echo>Entering try.this2							</echo>


		
		<property file="./test.properties" />

		<!--
		<loadproperties>
			<file file="./test.properties"/>
		</loadproperties>
		-->
		    
		

		<ac:propertyselector property="p.list.CC" 
						 delimiter=","
						 match="${filter.value.CC}\.(.*)" 
						 select="\1" 
						 casesensitive="false" />
		
		
		
		<echo> P List The First Time.... </echo>
		<echo> </echo>
		
		<!--
		<ac:for list="${p.list}" param="lineout">
		      <sequential>  
		        	<echo>Property Keys: @{lineout}</echo>  
		      </sequential>  

		</ac:for>
		-->

	    	<foreach   list="${p.list.CC}"	                
	                target="dump.line.CC"
	                param="lineout2" />


		<ac:propertyselector property="p.list.was7" 
						 delimiter=","
						 match="${filter.value.was7}\.(.*)" 
						 select="\1" 
						 casesensitive="false" />
		
		
		
		<echo> P List The Second Time.... </echo>
		<echo> </echo>
		
		<!--
		<ac:for list="${p.list}" param="lineout">
		      <sequential>  
		        	<echo>Property Keys: @{lineout}</echo>  
		      </sequential>  

		</ac:for>
		-->

	    	<foreach   list="${p.list.was7}"	                
	                target="dump.line.was7"
	                param="lineout2" />

	
	</target>


  	<!--
					    Target: try.this
  	-->
  	<target name="try.this" description="Test Target in Ant" depends="init">

		<echo>Entering try.this							</echo>
		
		<echo message="The first seven letters of the alphabet are:"/>

		<ac:for list="aa,bb,cc,dd,ee,ff,gg" param="letter">  
		      <sequential>  
		        	<echo>Letter: @{letter}</echo>  
		      </sequential>  
		</ac:for>  

	</target>

	    



  	<!--
    			Target: CLEAN.FILES
  	-->     
  
  	<target name="clean.files" description="Cleans Wildcard of Files Passed In." depends="init">
    
		<echo message="Entered: clean.class" />            
    
		<delete dir="${base.dir}" verbose="true" quiet="false" includeemptydirs="true" >
			 <include name="**/*/${files.key}"/>			 
		</delete>
    
    
    
  	</target>   

  	<!--
    			Target: MOVE.FILEZ.B4.DATE
  	-->     
  
  	<target name="move.files.b4.date" description="Moves a group of targeted files that have a modified date BEFORE threshold date." depends="init">
    
		<echo message="Entered: move.files.b4.date" />            

		<property name="copy.source.dir" 					value="C:\data" 	/>
		<property name="copy.target.dir" 					value="H:\data2" 	/>

	   	<patternset id="move.file.pattern.1">	

		   <include name="**/*.doc"		/>
		   <include name="**/*.docx"		/>
		   <include name="**/*.rtf"		/>

		   <include name="**/*.xls"		/>
		   <include name="**/*.xlsx"		/>

		   <include name="**/*.ppt"		/>
		   <include name="**/*.pptx"		/>

		   <include name="**/*.pdf"		/>
		   
		   <include name="**/*.vsd"		/>		   
		   
		   <include name="**/*.zip"		/>
		   
		   <exclude name="**/Orders/*.*" 	/>
		   
	    	</patternset>


	    	<move todir="${copy.target.dir}" preservelastmodified="true" force="true" verbose="true" >
			
			<fileset dir="${copy.source.dir}" >

		        	<patternset refid="move.file.pattern.1"/>			    				
				
			    	<date datetime="01/01/2012 12:00 AM" when="before"	/>

			</fileset>
		    
		</move>
    
  	</target>   

    
</project>
